#include <stdio.h>
#include <stdlib.h>
#define MAX_SIZE 100

//스택 구조체 정의
typedef int element;
typedef struct {
	element data[MAX_SIZE];
	int top;
} StackType;

//스택 초기화함수
void init_stack(StackType* s) {	
	s->top = -1;
}

//스택 비었는지 확인하는 함수
int is_empty(StackType* s) {
	return (s->top == -1);
}

//포화 상태 검출 함수
int is_full(StackType* s) {
	return (s->top == (MAX_SIZE - 1));
}

//푸쉬함수
void push(StackType* s, element item) {
	if (is_full(s)) {
		fprintf(stderr, "스택이 가득 찼습니다.\n");
		return;
	}
	else {
		s->data[++(s->top)] = item;
	}
}

//팝하는 함수
element pop(StackType* s) {
	if (is_empty(s)) {
		fprintf(stderr, "스택이 비었습니다.\n");
		exit(1);
	}
	else {
		return s->data[(s->top)--];
	}
}

int main() {
    StackType s;
    init_stack(&s);

    int n;
    printf("배열의 크기를 입력하세요: ");
    scanf("%d", &n);

    int arr[MAX_SIZE];
    printf("%d개의 정수를 입력하세요: ", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
        push(&s, arr[i]);
    }

    printf("배열의 역순: ");
    while (!is_empty(&s)) {
        printf("%d ", pop(&s));
    }
    printf("\n");

    return 0;
}
